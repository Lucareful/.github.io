<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>性能优化 on Luenci</title>
    <link>http://localhost:1313/categories/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</link>
    <description>Recent content in 性能优化 on Luenci</description>
    <generator>Hugo -- 0.129.0</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/categories/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang pprof 性能分析指南</title>
      <link>http://localhost:1313/articles/1/01/golang-pprof-%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E6%8C%87%E5%8D%97/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/articles/1/01/golang-pprof-%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;h1 id=&#34;golang-pprof-性能分析指南&#34;&gt;Golang pprof 性能分析指南&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;pprof 是一个用于可视化和分析分析数据的工具。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;采样方式&#34;&gt;采样方式&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;方式名称&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;如何使用&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;优点&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;缺点&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;使用场景&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;runtime/pprof&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;手动调用【runtime.StartCPUProfile、runtime.SweightCPUProfile】等&lt;strong&gt;API&lt;/strong&gt;来进行数据的采集。采集程序（非 Server）的指定区块的运行数据进行分析。&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;灵活性高&lt;/strong&gt;、按需采集。&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;工具型应用&lt;/strong&gt;（比如说定制化的分析小工具、集成到公司监控系统）。这种应用运行一段时间就结束。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;net/http/pprof&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;通过&lt;strong&gt;http&lt;/strong&gt;服务来获取Profile采样文件。 &lt;code&gt;import _ &amp;quot;net/http/pprof&amp;quot;&lt;/code&gt;。基于 HTTP Server 运行，并且可以采集运行时数据进行分析。&lt;code&gt;net/http/pprof中只是使用runtime/pprof包来进行封装了一下，并在http端口上暴露出来&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;简单易用&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;在线服务（一直运行着的程序）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;go test&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;通过命令&lt;code&gt;go test -bench . -cpuprofile cpu.prof&lt;/code&gt;来进行采集数据。&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;针对性强&lt;/strong&gt;、细化到函数&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;进行某函数的性能测试&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;指标解释&#34;&gt;指标解释&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://github.com/user-attachments/assets/c2182bee-333f-4ec3-94cb-7a36440bb105&#34; alt=&#34;image&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;常用指标如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;allocs：所有时刻的内存使用情况，包括正在使用的及已经回收的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;block：导致在同步原语上发生阻塞的堆栈跟踪&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cmdline： 当前程序的命令行的完整调用路径。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;goroutine：目前的 goroutine 数量及运行情况&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;heap：当前时刻的内存使用情况&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mutex：查看导致互斥锁的竞争持有者的堆栈跟踪&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;profile：默认进行 30s 的 CPU Profiling，得到一个分析用的 profile 文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;threadcreate：查看创建新 OS 线程的堆栈跟踪。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;trance：当前程序执行的追踪，可以在秒数的 GET 参数中指定持续时间。在获取追踪文件后，请使用 go 工具的 trace 命令来调查追踪。（&lt;a href=&#34;https://mp.weixin.qq.com/s/I9xSMxy32cALSNQAN8wlnQ&#34;&gt;深入浅出 Go trace (qq.com)&lt;/a&gt;）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，默认情况下是不追踪block和mutex的信息的，如果想要看这两个信息，需要在代码中加上两行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;runtime.&lt;span style=&#34;color:#50fa7b&#34;&gt;SetBlockProfileRate&lt;/span&gt;(&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#6272a4&#34;&gt;// 开启对阻塞操作的跟踪，block  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;runtime.&lt;span style=&#34;color:#50fa7b&#34;&gt;SetMutexProfileFraction&lt;/span&gt;(&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#6272a4&#34;&gt;// 开启对锁调用的跟踪，mutex
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;​	注意，上文的所有信息都是实时的，如果你刷新一下，是可以看到数字在变化的。此时如果点击蓝色的连接，可以看到一些协程的栈信息，这些信息并不容易阅读。如果想要更加清晰的数据，需要将信息保存下来，在本地进行分析。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
