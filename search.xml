<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[python解释器介绍]]></title>
    <url>%2F2019%2F06%2F26%2Fthree%2F</url>
    <content type="text"><![CDATA[CPython 当我们从Python官方网站下载并安装好Python 3.x后，我们就直接获得了一个官方版本的解释器：CPython。这个解释器是用C语言开发的，所以叫CPython。在命令行下运行python就是启动CPython解释器。 IPython IPython是基于CPython之上的一个交互式解释器，也就是说，IPython只是在交互方式上有所增强，但是执行Python代码的功能和CPython是完全一样的。好比很多国产浏览器虽然外观不同，但内核其实都是调用了IE。 CPython用&gt;&gt;&gt;作为提示符，而IPython用In [序号]:作为提示符。 Jpython Jython是运行在Java平台上的Python解释器，可以直接把Python代码编译成Java字节码执行。 PyPy PyPy是另一个Python解释器，它的目标是执行速度。PyPy采用JIT技术（just-in-time compiler 即时编译器，通俗解释就是边编译边执行），对Python代码进行动态编译（注意不是解释），所以可以显著提高Python代码的执行速度。 绝大部分Python代码都可以在PyPy下运行，但是PyPy和CPython有一些是不同的，这就导致相同的Python代码在两种解释器下执行可能会有不同的结果。如果你的代码要放到PyPy下执行，就需要了解PyPy和CPython的不同点。、 IronPython IronPython和Jython类似，只不过IronPython是运行在微软.Net平台上的Python解释器，可以直接把Python代码编译成.Net的字节码。]]></content>
      <categories>
        <category>Python</category>
        <category>编译器介绍</category>
      </categories>
      <tags>
        <tag>python编译器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux常用命令]]></title>
    <url>%2F2019%2F06%2F23%2Ftow%2F</url>
    <content type="text"><![CDATA[Linux管理文件和目录的命令 命令 功能 命令 功能 pwd 显示当前目录 ls 查看目录下的内容 cd 改变所在目录 cat 显示文件的内容 grep 在文件中查找某字符 cp 复制文件 touch 创建文件 mv 移动文件 rm 删除文件 rmdir 删除目录 pwd命令 该命令的英文解释为print working directory(打印工作目录)。输入pwd命令，Linux会输出当前目录。 cd命令 cd命令用来改变所在目录。 1234cd / 转到根目录中 cd ~ 转到/home/user用户目录下 cd /usr 转到根目录下的usr目录中-------------绝对路径 cd test 转到当前目录下的test子目录中-------相对路径 ls命令 ​ ls命令用来查看目录的内容。 选项 含义 -a 列举目录中的全部文件，包括隐藏文件 -l 列举目录中的细节，包括权限、所有者、组群、大小、创建日期、文件是否是链接等 -f 列举的文件显示文件类型 -r 逆向，从后向前地列举目录中内容 -R 递归，该选项递归地列举当前目录下所有子目录内的内容 -s 大小，按文件大小排序 -h 以人类可读的方式显示文件的大小，如用K、M、G作单位 ls -l examples.doc 列举文件examples.doc的所有信息 cat命令123cat命令可以用来合并文件，也可以用来在屏幕上显示整个文件的内容。cat snow.txt 该命令显示文件snow.txt的内容，ctrl+D退出cat。 grep命令12345grep命令的最大功能是在一堆文件中查找一个特定的字符串。 grep money test.txt 以上命令在test.txt中查找money这个字符串，grep查找是区分大小写的 touch命令​123touch命令用来创建新文件，他可以创建一个空白的文件，可以在其中添加文本和数据。 touch newfile 该命令创建一个名为newfile的空白文件。 cp命令​ cp命令用来拷贝文件，要复制文件，输入命令： 12cp &lt;source filename&gt; &lt;target filename&gt;cp t.txt Document/t 该命令将把文件t.txt复制到Document目录下，并命名为t。 选项 含义 -i 互动：如果文件将覆盖目标中的文件，他会提示确认 -r 递归：这个选项会复制整个目录树、子目录以及其他 -v 详细：显示文件的复制进度 mv命令​ mv命令用来移动文件。 选项 说明 -i 互动：如果选择的文件会覆盖目标中的文件，他会提示确认 -f 强制：它会超越互动模式，不提示地移动文件，属于很危险的选项 -v 详细：显示文件的移动进度 ​ mv t.txt Document 把文件t.txt 移动到目录Document中。 rm命令​ rm命令用来删除文件。 选项 说明 -i 互动：提示确认删除 -f 强制：代替互动模式，不提示确认删除 -v 详细：显示文件的删除进度 -r 递归：将删除某个目录以及其中所有的文件和子目录 ​ rm t.txt 该命令删除文件t.txt rmdir命令 ​ rmdir命令用来删除目录。 mkdir 命令 1234567#单个文件夹创建mkdir 文件夹名称#例如：mkdir wenjianjia#多个文件夹创建mkdirs 文件夹1/文件夹2......\#例如：mkdirs wenjianjia1/wenjianjia2 chmod命令详解作用： 改变一个或多个文件的存取模式(mode) 格式： chmod [options] mode files 只能文件属主或特权用户才能使用该功能来改变文件存取模式。 mode：可以是数字形式或以who opcode permission形式表示。who是可选的，默认是a(所有用户)。只能选择一个opcode(操作码)。可指定多个mode，以逗号分开。 综上，包含options、who、opcode、permission等选项，下面分别进行介绍 options： 标识 含义 -c，–changes 只输出被改变文件的信息 -f，–silent，–quiet 当chmod不能改变文件模式时，不通知文件的用户 –help 输出帮助信息。 -R，–recursive 可递归遍历子目录，把修改应到目录下所有文件和子目录 –reference=filename 参照filename的权限来设置权限 -v，–verbose 无论修改是否成功，输出每个文件的信息 –version 输出版本信息 who 标识 含义 u 用户 g 组 o 其它 a 所有用户(默认) opcode 标识 含义 + 增加权限 - 删除权限 = 重新分配权限 permission 标识 含义 r 读 w 写 x 执行 s 设置用户(或组)的ID号 t 设置粘着位(sticky bit)，防止文件或目录被非属主删除 作为选择，我们多数用三位八进制数字的形式来表示权限，第一位指定属主的权限，第二位指定组权限，第三位指定其他用户的权限，每位通过4(读)、2(写)、1(执行)三种数值的和来确定权限。如6(4+2)代表有读写权，7(4+2+1)有读、写和执行的权限。 还可设置第四位，它位于三位权限序列的前面，第四位数字取值是4，2，1，代表意思如下： 4，执行时设置用户ID，用于授权给基于文件属主的进程，而不是给创建此进程的用户。2，执行时设置用户组ID，用于授权给基于文件所在组的进程，而不是基于创建此进程的用户。1，设置粘着位。 实例： 12345678$ chmod u+x file 给file的属主增加执行权限$ chmod 751 file 给file的属主分配读、写、执行(7)的权限，给file的所在组分配读、执行(5)的权限，给其他用户分配执行(1)的权限$ chmod u=rwx,g=rx,o=x file 上例的另一种形式$ chmod =r file 为所有用户分配读权限$ chmod 444 file 同上例$ chmod a-wx,a+r file 同上例$ chmod -R u+r directory 递归地给directory目录下所有文件和子目录的属主分配读的权限$ chmod 4755 设置用ID，给属主分配读、写和执行权限，给组和其他用户分配读、执行的权限。 linux下链接 ln –s 源文件 目标文件]]></content>
      <categories>
        <category>Linux</category>
        <category>常用命令</category>
      </categories>
      <tags>
        <tag>linux命令</tag>
      </tags>
  </entry>
</search>
