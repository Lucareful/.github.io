<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Django on Luenci</title>
    <link>http://localhost:1313/tags/django/</link>
    <description>Recent content in Django on Luenci</description>
    <generator>Hugo -- 0.129.0</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/tags/django/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Django之编写URL</title>
      <link>http://localhost:1313/articles/1/01/django%E4%B9%8B%E7%BC%96%E5%86%99url/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/articles/1/01/django%E4%B9%8B%E7%BC%96%E5%86%99url/</guid>
      <description>&lt;h1 id=&#34;编写url&#34;&gt;编写URL&lt;/h1&gt;
&lt;h2 id=&#34;编写规则&#34;&gt;编写规则&lt;/h2&gt;
&lt;p&gt;​	为了使其规范性，在每个新创建的App中设置独立的静态资源和模板文件夹并添加一个空白的&lt;code&gt;.py&lt;/code&gt;文件，命为&lt;code&gt;urls.py&lt;/code&gt;。如下是创建app中的文件结构：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Django参数和模板</title>
      <link>http://localhost:1313/articles/1/01/django%E5%8F%82%E6%95%B0%E5%92%8C%E6%A8%A1%E6%9D%BF/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/articles/1/01/django%E5%8F%82%E6%95%B0%E5%92%8C%E6%A8%A1%E6%9D%BF/</guid>
      <description>render方法参数 request: 是一个固定参数。 template_name: templates 中定义的文件, 要注意路径名. 比如’templates\polls\index.html’, 参数就要写‘polls\index.html’ context: 要传入文件中用于渲染呈现的数据, 默认是字典格式 content_type: 生成的文档要使用的MIME 类型。默认为DEFAULT_CONTENT_TYPE 设置的值。 status: http的响应代码,默认是200. using: 用于加载模板使用的模板引擎的名称。 reques</description>
    </item>
    <item>
      <title>Django简介</title>
      <link>http://localhost:1313/articles/1/01/django%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/articles/1/01/django%E7%AE%80%E4%BB%8B/</guid>
      <description>&lt;h1 id=&#34;django简介&#34;&gt;Django简介&lt;/h1&gt;
&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;2003诞生 它最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;mvt框架&#34;&gt;MVT（框架）&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Models 模型 数据库&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Views 视图 放和拿&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Template 模板 前端&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;From 表单 &lt;code&gt;django&lt;/code&gt; 会根据你后台数据库字段及表单层的设计对应的给你创建HTML关于表单的代码&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;django优点&#34;&gt;Django优点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;对象关系映射（Object Relational Mapping ORM）：通过定义映射类来构建数据模型，将模型与关系型数据库连接起来，使用ORM框架内置的数据库接口可实现复杂的数据操作。（简单来说就是把数据库的语句换成了python可识别的语言）&lt;/li&gt;
&lt;li&gt;URL设计：开发者可以设计任意的URL（网站地址）， 而且支持使用正则表达式设计。&lt;/li&gt;
&lt;li&gt;模板系统：提供可扩展的模板语言，模板之间具有可继承性。&lt;/li&gt;
&lt;li&gt;表单处理：可以生成各种表单模型，而且表单具有有效性检验功能。&lt;/li&gt;
&lt;li&gt;Cache系统：完善的缓存系统，可支持多种缓存方式&lt;/li&gt;
&lt;li&gt;用户管理系统：提供用户认证，权限设置和用户组功能，功能扩展性强。&lt;/li&gt;
&lt;li&gt;国际化：内置国际化系统，方便开发出多语言的网站。&lt;/li&gt;
&lt;li&gt;admin管理系统：内置admin管理系统，系统的扩展性强。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
