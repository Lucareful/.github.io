<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Golang基础语法 on Luenci</title>
    <link>http://localhost:1313/tags/golang%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</link>
    <description>Recent content in Golang基础语法 on Luenci</description>
    <generator>Hugo -- 0.129.0</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/tags/golang%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go语言基础知识和语法</title>
      <link>http://localhost:1313/articles/1/01/go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%92%8C%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/articles/1/01/go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%92%8C%E8%AF%AD%E6%B3%95/</guid>
      <description>&lt;h1 id=&#34;go语言特点&#34;&gt;Go语言特点&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;没有头文件概念，&lt;code&gt;.go&lt;/code&gt;后缀&lt;/li&gt;
&lt;li&gt;强类型语言，编译型语言&lt;/li&gt;
&lt;li&gt;一个go语言的应用程序，在运行的时候是不需要依赖外部库的
&lt;ul&gt;
&lt;li&gt;把执行时需要的库都打包到程序中&lt;/li&gt;
&lt;li&gt;go程序比较大&lt;/li&gt;
&lt;li&gt;如果import的包没有使用，那么程序不允许编译&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;go语法不区分平台的，在windos下面编译的一个程序，可以在Linux上运行，需要配置环境变量来控制
&lt;ul&gt;
&lt;li&gt;GOOS：设定运行平台
&lt;ul&gt;
&lt;li&gt;mac：darwin&lt;/li&gt;
&lt;li&gt;linux：linux&lt;/li&gt;
&lt;li&gt;windos：windos&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GOARCH：目标平台的体系架构
&lt;ul&gt;
&lt;li&gt;386&lt;/li&gt;
&lt;li&gt;amd64&lt;/li&gt;
&lt;li&gt;arm&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;go命令&#34;&gt;Go命令&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;go build -o 生成文件名.exe 编译文件名.go&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;go run *.go&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接运行程序不会编译成exe文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装程序&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;./configure&lt;/li&gt;
&lt;li&gt;make&lt;/li&gt;
&lt;li&gt;make install —&amp;gt;将编译好的程序安装到指定目录&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;go install&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将编译后的可执行文件安装到 GOBIN 目录下&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;go mod&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.notion.so/6b079c18f2fa42d9bccd79f84eaa0578&#34;&gt;参数&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;go mod 资料连接&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://juejin.cn/post/6844903798658301960&#34;&gt;go mod 使用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/59687626&#34;&gt;开始使用 Go Module&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;依赖包存储位置&#34;&gt;依赖包存储位置&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;使用go get获取的包放在&lt;code&gt;$GOPATH/src/&lt;/code&gt;目录下&lt;/li&gt;
&lt;li&gt;使用go mod下载的依赖包放在&lt;code&gt;$GOPATH/pkg/mod/&lt;/code&gt;目录下，所有项目共享&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;go目录结构&#34;&gt;Go目录结构&lt;/h2&gt;
&lt;h3 id=&#34;一般的一个go项目在gopath下会有如下三个目录&#34;&gt;一般的，一个Go项目在GOPATH下，会有如下三个目录：&lt;/h3&gt;
&lt;p&gt;一般，bin和pkg目录可以不创建，go命令会自动创建（如 go install），只需要创建src目录即可。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|&lt;span style=&#34;color:#ff79c6&#34;&gt;--&lt;/span&gt;bin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|&lt;span style=&#34;color:#ff79c6&#34;&gt;--&lt;/span&gt;pkg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|&lt;span style=&#34;color:#ff79c6&#34;&gt;--&lt;/span&gt;src
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;bin&lt;/code&gt;存放编译后的可执行文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pkg
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;存放编译后的包文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pkg&lt;/code&gt;中的文件是Go编译生成的，而不是手动放进去的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;src&lt;/code&gt;存放项目源文件&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;go数据类型&#34;&gt;Go数据类型&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;go语言不支持隐式类型转换
&lt;ul&gt;
&lt;li&gt;比如从int 转为 int 64就会发生编译错误&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;显示类型转换和隐式类型转换&#34;&gt;显示类型转换和隐式类型转换&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;当两种或多种数据类型进行某种操作时，不需要干预，系统会自动进行隐式转换。&lt;/li&gt;
&lt;li&gt;但你需要把一个 long 类型的数据转成 int 时，又或者让 string 与 int 互转，当数据小数点太多时，这时候就必须使用 显式转型&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;golang的零值&#34;&gt;Golang的零值&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Go语言中的零值是变量没有做初始化时系统默认设置的值。 所有其他数值型的类型（包括complex64/128）零值都是0，可以用常量表达式代表数值0的任何形式表示出来。 但是类型不能混用，变量类型和零值类型必须匹配。&lt;/li&gt;
&lt;li&gt;布尔类型的零值（初始值）为 false，数值类型的零值为 0，字符串类型的零值为空字符串&amp;quot;&amp;quot;，而指针、切片、映射、通道、函数和接口的零值则是 nil。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
