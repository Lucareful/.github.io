<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Prometheus on Luenci</title>
    <link>http://localhost:1313/tags/prometheus/</link>
    <description>Recent content in Prometheus on Luenci</description>
    <generator>Hugo -- 0.129.0</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/tags/prometheus/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Prometheus 入门实操</title>
      <link>http://localhost:1313/articles/1/01/prometheus-%E5%85%A5%E9%97%A8%E5%AE%9E%E6%93%8D/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/articles/1/01/prometheus-%E5%85%A5%E9%97%A8%E5%AE%9E%E6%93%8D/</guid>
      <description>Prometheus 入门实操 参考文章：Prometheus监控Linux主机 - 吕振江 - 博客园 (cnblogs.com) 安装 1 2 3 4 5 6 7 8 9 # 下载 wget https://github.com/prometheus/prometheus/releases/download/v2.44.0/prometheus-2.44.0.linux-amd64.tar.gz # 解压 tar zxf prometheus-2.44.0.linux-amd64.tar.gz # 移动 mv prometheus-2.24.1.linux-amd64/* /usr/local/prometheus # 将本机上报 sed -i &amp;#39;s/localhost/你的主机ip/g&amp;#39; /usr/local/prometheus/prometheus.yml 启动(systemed，守护进程) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 cat &amp;lt;&amp;lt;EOF &amp;gt; /usr/lib/systemd/system/prometheus.service [Unit] Description=prometheus After=network.target [Service] Type=simple ExecStart=/usr/local/prometheus/prometheus --config.file=/usr/local/prometheus/prometheus.yml --storage.tsdb.path=/usr/local/prometheus/data/ --web.enable-lifecycle --storage.tsdb.retention.time=30d Restart=on-failure [Install] WantedBy=multi-user.target EOF systemctl daemon-reload systemctl start prometheus systemctl status prometheus &amp;amp;&amp;amp; systemctl enable prometheus 访问 Ip:9090 管理接口 1 2 3 4 5 6 7 8 9 10 11 12 $ curl http://ip:9090/-/healthy Prometheus is Healthy. # 健</description>
    </item>
    <item>
      <title>Prometheus 概念入门</title>
      <link>http://localhost:1313/articles/1/01/prometheus-%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/articles/1/01/prometheus-%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/</guid>
      <description>&lt;h1 id=&#34;prometheus-概念入门&#34;&gt;Prometheus 概念入门&lt;/h1&gt;
&lt;h1 id=&#34;数据模型&#34;&gt;数据模型&lt;/h1&gt;
&lt;p&gt;​	Prometheus 所有采集的监控数据均以指标（metric）的形式保存在内置的&lt;a href=&#34;https://www.wikiwand.com/zh/%E6%99%82%E9%96%93%E5%BA%8F%E5%88%97&#34;&gt;时间序列&lt;/a&gt;数据库当中（TSDB）：属于同一指标名称，同一标签集合的、有时间戳标记的数据流。除了存储的时间序列，Prometheus 还可以根据查询请求产生临时的、衍生的时间序列作为返回结果。&lt;/p&gt;
&lt;h2 id=&#34;指标名称和标签&#34;&gt;指标名称和标签&lt;/h2&gt;
&lt;p&gt;每一条时间序列由指标名称（Metrics Name）以及一组标签（键值对）唯一标识。其中指标的名称（metric name）可以反映被监控样本的含义（例如，&lt;code&gt;http_requests_total&lt;/code&gt; — 表示当前系统接收到的 HTTP 请求总量），指标名称只能由 ASCII 字符、数字、下划线以及冒号组成，同时必须匹配正则表达式 &lt;code&gt;[a-zA-Z_:][a-zA-Z0-9_:]*&lt;/code&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;[info] 注意&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;冒号用来表示用户自定义的记录规则，不能在 exporter 中或监控对象直接暴露的指标中使用冒号来定义指标名称。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过使用标签，Prometheus 开启了强大的多维数据模型：对于相同的指标名称，通过不同标签列表的集合，会形成特定的度量维度实例（例如：所有包含度量名称为 &lt;code&gt;/api/tracks&lt;/code&gt; 的 http 请求，打上 &lt;code&gt;method=POST&lt;/code&gt; 的标签，就会形成具体的 http 请求）。该查询语言在这些指标和标签列表的基础上进行过滤和聚合。改变任何度量指标上的任何标签值（包括添加或删除指标），都会创建新的时间序列。&lt;/p&gt;
&lt;p&gt;标签的名称只能由 ASCII 字符、数字以及下划线组成并满足正则表达式 &lt;code&gt;[a-zA-Z_][a-zA-Z0-9_]*&lt;/code&gt;。其中以 &lt;code&gt;__&lt;/code&gt; 作为前缀的标签，是系统保留的关键字，只能在系统内部使用。标签的值则可以包含任何 &lt;code&gt;Unicode&lt;/code&gt; 编码的字符。&lt;/p&gt;
&lt;h2 id=&#34;样本&#34;&gt;样本&lt;/h2&gt;
&lt;p&gt;在时间序列中的每一个点称为一个样本（sample），样本由以下三部分组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指标（metric）：指标名称和描述当前样本特征的 labelsets；&lt;/li&gt;
&lt;li&gt;时间戳（timestamp）：一个精确到毫秒的时间戳；&lt;/li&gt;
&lt;li&gt;样本值（value）： 一个 folat64 的浮点型数据表示当前样本的值。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
